// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  Order     Order[]
}

model Category {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  image           String            @db.VarChar(255)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  SubCategory     SubCategory[]
  Product         Product[]
  ProductCategory ProductCategory[]
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  image      String    @db.VarChar(255)
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Product {
  id              Int               @id @default(autoincrement())
  title           String            @db.VarChar(255)
  subTitle        String            @db.VarChar(255)
  desc            String            @db.Text
  price           Int
  main_image      String            @db.VarChar(255)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ProductImage    ProductImage[]
  Invoice         Invoice[]
  OrderDetail     OrderDetail[]
  Category        Category?         @relation(fields: [categoryId], references: [id])
  categoryId      Int?
  ProductCategory ProductCategory[]
}

model ProductCategory {
  id         Int       @id @default(autoincrement())
  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
  product    Product?  @relation(fields: [productId], references: [id])
  productId  Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  image     String   @db.VarChar(255)
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id          Int           @id @default(autoincrement())
  user        User?         @relation(fields: [userId], references: [id])
  userId      Int?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Invoice     Invoice[]
  OrderDetail OrderDetail[]
}

model OrderDetail {
  id        Int      @id @default(autoincrement())
  order     Order?   @relation(fields: [orderId], references: [id])
  orderId   Int?
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invoice {
  id          Int      @id @default(autoincrement())
  totalAmount Int
  product     Product? @relation(fields: [productId], references: [id])
  productId   Int?
  order       Order?   @relation(fields: [orderId], references: [id])
  orderId     Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
